{"version":3,"file":"index.js","sources":["../src/isNodeIgnored.js","../src/destructShorthand.js","../src/hasValueUrl.js","../src/cutter.js","../src/cutterInvertor.js","../src/index.js"],"sourcesContent":["const PATTERN_IGNORE = /[\\s]*bgImage[\\s]*:[\\s]*ignore[\\s]*/i;\n\n/**\n * Checks instruction to ignore the node.\n *\n * @param  {Node} node\n *\n * @returns {boolean}\n */\nexport default function isNodeIgnored(node) {\n  const { parent } = node;\n\n  if (!parent) {\n    // Root was reached.\n    return false;\n  }\n\n  if (parent.some((child) => (child.type === 'comment' && PATTERN_IGNORE.test(child.text)))) {\n    // Instruction to ignore the node was detected.\n    return true;\n  }\n\n  // Check the instruction on one level above.\n  return isNodeIgnored(parent);\n}\n","import cssColorList from 'css-color-list';\n\nimport isNodeIgnored from './isNodeIgnored';\n\nconst PATTERN_BACKGROUND = /background(?!-)/i;\nconst PATTERN_GRADIENT = /[a-z-]*gradient\\((?:(?:hls|rgb)a?\\([^()]*\\)[^,]*[,]?|[^,]+[,]?)+\\)/i;\nconst PATTERN_URL = /url\\([^)]+\\)[\\s]*/i;\n\n// @see https://developer.mozilla.org/en-US/docs/Web/CSS/background-color\nconst colorList = cssColorList();\nconst PATTERN_COLOR = `(?:(?:rgb|hls)a?\\\\([^)]*\\\\)|#[0-9a-f]{3,8}|${colorList.join('|')})`;\nconst PATTERN_START_BACKGROUND_COLOR = new RegExp(`^${PATTERN_COLOR}[\\\\s]*`, 'i');\nconst PATTERN_END_BACKGROUND_COLOR = new RegExp(`[\\\\s]*${PATTERN_COLOR}$`, 'i');\n\n/**\n * Destruction of shorthand 'background' by prop 'background-image' and the rest props.\n *\n * @param {string} css\n */\nexport default function destructShorthand(css) {\n  css.walkDecls(PATTERN_BACKGROUND, (decl) => {\n    if (!isNodeIgnored(decl)) {\n      const { value } = decl;\n      const hasURL = PATTERN_URL.test(value);\n\n      if (hasURL) {\n        let valueStartBgColor = '';\n        let valueEndBgColor = '';\n        const layers = value\n          .replace(PATTERN_START_BACKGROUND_COLOR, (match) => {\n            valueStartBgColor = match;\n\n            return '';\n          })\n          .replace(PATTERN_END_BACKGROUND_COLOR, (match) => {\n            valueEndBgColor = match;\n\n            return '';\n          })\n          .split(/,/)\n          .reduce((result, subLine, index) => {\n            if (index === 0) {\n              return [subLine];\n            }\n\n            const indexLast = result.length - 1;\n            const subLineLast = result[indexLast];\n\n            if ((subLineLast.match(/\\(/g) || []).length !== (subLineLast.match(/\\)/g) || []).length) {\n              const lastItem = `${result[indexLast]},${subLine}`;\n\n              return [\n                ...result.slice(0, -1),\n                lastItem,\n              ];\n            }\n\n            return [\n              ...result,\n              subLine,\n            ];\n          }, []);\n        const isMultiple = layers.length > 1;\n\n        // Calculate 'background-image' value\n        const valueURL = layers\n          .map((layer) => {\n            const hasURLValue = PATTERN_URL.test(layer);\n            const valueGradient = layer.match(PATTERN_GRADIENT) ? layer.match(PATTERN_GRADIENT)[0] : null;\n\n            if (hasURLValue) {\n              return layer.replace(/(?:[^\\s]+[\\s]+)*(url\\([^)]*\\))(?:[\\s]+[^\\s]+)*/ig, '$1');\n            }\n\n            if (valueGradient) {\n              return layer.replace(/([^\\s]+(?:[\\s]+[^\\s]+)*)/ig, valueGradient);\n            }\n\n            return layer.replace(/[^\\s]+(?:[\\s]+[^\\s]+)*/ig, 'initial');\n          })\n          .join(',');\n\n        decl.cloneAfter({\n          prop: 'background-image',\n          value: valueURL.trim(),\n        });\n\n        // Calculate 'background' value\n        const valueRest = layers\n          .map((layer) => {\n            const hasURLValue = PATTERN_URL.test(layer);\n\n            if (!hasURLValue) {\n              return layer;\n            }\n\n            return layer\n              .replace(\n                /([^\\s]+[\\s]+)*(?:url\\([^)]*\\)(?:[\\s]+(?=[^\\s]))?)([^\\s]+[\\s]*[^\\s]+)*/ig,\n                (match, group1, group2) => {\n                  const startPart = group1 || '';\n                  const endPart = group2 || '';\n                  const result = (`${startPart}${endPart}`);\n\n                  if (isMultiple && !result.trim()) {\n                    return `${startPart}initial${endPart}`;\n                  }\n\n                  return result;\n                }\n              );\n          })\n          .join(',');\n\n        if (\n          !valueStartBgColor.trim()\n          && !valueEndBgColor.trim()\n          && !valueRest.replace(/(?:initial)|[\\s,]+/ig, '')\n        ) {\n          decl.remove();\n        } else {\n          decl.replaceWith(decl.clone({\n            value: `${valueStartBgColor}${valueRest}${valueEndBgColor}`.trim(),\n          }));\n        }\n      }\n    }\n  });\n}\n","const PATTERN_URL = /url\\([^)]+\\)[\\s]*/i;\n\n/**\n * Checks value for containing of 'url()'.\n *\n * @param {string} value\n *\n * @returns {boolean}\n */\nexport default function hasValueUrl(value) {\n  return PATTERN_URL.test(value);\n}\n","import destructShorthand from './destructShorthand';\nimport hasValueUrl from './hasValueUrl';\nimport isNodeIgnored from './isNodeIgnored';\n\nconst PATTERN_BACKGROUND_IMAGE = /background-image/i;\n\n/**\n * @param {string} css\n */\nexport default function cutter(css) {\n  destructShorthand(css);\n\n  css.walkDecls(PATTERN_BACKGROUND_IMAGE, (decl) => {\n    if (hasValueUrl(decl.value) && !isNodeIgnored(decl)) {\n      decl.remove();\n    }\n  });\n}\n","import destructShorthand from './destructShorthand';\nimport hasValueUrl from './hasValueUrl';\nimport isNodeIgnored from './isNodeIgnored';\n\nconst PATTERN_BACKGROUND_IMAGE = /background-image/i;\nconst IGNORING_AT_RULES_NAMES = [\n  'charset',\n  'import',\n  'namespace',\n];\n\n/**\n * @param {string} css\n */\nexport default function cutterInvertor(css) {\n  destructShorthand(css);\n\n  css.walkDecls((decl) => {\n    if (isNodeIgnored(decl) || !hasValueUrl(decl.value) || !PATTERN_BACKGROUND_IMAGE.test(decl.prop)) {\n      decl.remove();\n    }\n  });\n\n  css.walkAtRules((rule) => {\n    if (IGNORING_AT_RULES_NAMES.indexOf(rule.name) !== -1) {\n      rule.remove();\n    }\n  });\n}\n","import postcss from 'postcss';\n\nimport cutter from './cutter';\nimport cutterInvertor from './cutterInvertor';\n\n/**\n * @param {string} mode\n *\n * @returns {void}\n */\nfunction getProcessor(mode) {\n  switch (mode) {\n    case 'cutter':\n      return cutter;\n\n    case 'cutterInvertor':\n      return cutterInvertor;\n\n    default:\n      throw new Error(`Unknow mode for postcss-bgimage: ${mode}`);\n  }\n}\n\n/**\n * @param {object} options - Plugin options.\n *\n * @returns {void}\n */\nexport default postcss.plugin('postcss-bgimage', (options) => {\n  if (!options) {\n    throw new Error('Required params was not passed.');\n  }\n\n  const { mode } = options;\n\n  return (css) => getProcessor(mode)(css);\n});\n"],"names":["PATTERN_IGNORE","isNodeIgnored","node","parent","some","child","type","test","text","PATTERN_BACKGROUND","PATTERN_GRADIENT","PATTERN_URL","colorList","cssColorList","PATTERN_COLOR","join","PATTERN_START_BACKGROUND_COLOR","RegExp","PATTERN_END_BACKGROUND_COLOR","destructShorthand","css","walkDecls","decl","value","hasURL","valueStartBgColor","valueEndBgColor","layers","replace","match","split","reduce","result","subLine","index","indexLast","length","subLineLast","lastItem","slice","isMultiple","valueURL","map","layer","hasURLValue","valueGradient","cloneAfter","prop","trim","valueRest","group1","group2","startPart","endPart","remove","replaceWith","clone","hasValueUrl","PATTERN_BACKGROUND_IMAGE","cutter","IGNORING_AT_RULES_NAMES","cutterInvertor","walkAtRules","rule","indexOf","name","getProcessor","mode","Error","postcss","plugin","options"],"mappings":"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"}